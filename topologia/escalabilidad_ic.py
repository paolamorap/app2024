import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import norm

# Datos proporcionados
datos_2_dispositivos = [1.3119168281555176, 0.890838623046875, 0.9329512119293213, 0.7720170021057129, 0.9382290840148926, 0.9332520961761475, 0.6825032234191895, 0.9647114276885986, 0.8528454303741455, 0.8827927112579346, 0.9504141807556152, 0.9571425914764404, 1.1055901050567627, 1.3471441268920898, 1.007885217666626, 0.9544820785522461, 0.9600718021392822, 0.7165687084197998, 1.0338554382324219, 0.9305968284606934, 0.8821136951446533, 0.8102624416351318, 0.7954237461090088, 0.8924174308776855, 0.8653538227081299, 0.8312509059906006, 1.2095451354980469, 0.8794262409210205, 0.8653609752655029, 0.8464713096618652, 0.8771796226501465, 0.8308088779449463, 0.9130475521087646, 0.853344202041626, 0.8303346633911133, 0.69203782081604, 0.7913331985473633, 0.901630163192749, 0.7783856391906738, 0.8966407775878906, 0.8716845512390137, 0.7001409530639648, 0.8332033157348633, 0.8620014190673828, 0.7704527378082275, 0.7999203205108643, 0.9748880863189697, 0.8156595230102539, 0.7169036865234375, 0.7533032894134521]
datos_3_dispositivos = [1.842174768447876, 1.218639612197876, 1.4591290950775146, 1.3793396949768066, 1.4844708442687988, 1.313967227935791, 1.4103477001190186, 1.1356346607208252, 1.276533842086792, 1.4440150260925293, 1.1556522846221924, 1.617767333984375, 1.2784593105316162, 1.7981860637664795, 1.267030954360962, 1.41562819480896, 1.3993101119995117, 1.7481238842010498, 1.2433011531829834, 1.6221063137054443, 1.161125898361206, 1.4806005954742432, 1.2677507400512695, 1.2650785446166992, 1.328916072845459, 1.2834181785583496, 1.3003056049346924, 1.3572437763214111, 1.2672600746154785, 1.285029649734497, 1.1912000179290771, 1.2123870849609375, 1.2692971229553223, 1.221468448638916, 1.2270865440368652, 1.2859864234924316, 1.3094356060028076, 1.4809105396270752, 1.2557437419891357, 1.1663224697113037, 1.3406729698181152, 1.454312801361084, 1.2770509719848633, 1.2742700576782227, 1.3092825412750244, 1.139589548110962, 1.173128604888916, 1.42449951171875, 1.4398691654205322, 1.2092976570129395]
datos_4_dispositivos = [2.542013645172119, 2.1861977577209473, 1.9642772674560547, 1.7266030311584473, 1.7635557651519775, 1.7117276191711426, 1.7455945014953613, 1.6476387977600098, 1.991431713104248, 1.7358393669128418, 1.6200501918792725, 2.044651985168457, 2.0008957386016846, 1.8376789093017578, 1.6666343212127686, 2.0125913619995117, 1.9634730815887451, 1.9826433658599854, 1.9449784755706787, 1.5824899673461914, 1.8072922229766846, 2.0008301734924316, 1.8038053512573242, 1.7982752323150635, 2.0091490745544434, 1.9457640647888184, 1.8163769245147705, 1.7788941860198975, 1.9211430549621582, 1.959561824798584, 1.732682704925537, 1.7108476161956787, 1.6884193420410156, 1.8345153331756592, 1.5814063549041748, 1.819563388824463, 1.729494333267212, 1.6955385208129883, 1.7675433158874512, 1.6890182495117188, 1.8090877532958984, 1.8188819885253906, 1.82033109664917, 1.6889824867248535, 2.0187981128692627, 1.6704885959625244, 1.7177276611328125, 1.745093822479248, 1.7791433334350586, 1.946101427078247]
datos_5_dispositivos = [2.976978063583374, 2.293135404586792, 2.0777852535247803, 2.650240659713745, 2.353100061416626, 2.2960758209228516, 2.2436585426330566, 2.3705248832702637, 2.107868194580078, 2.220432996749878, 2.2750024795532227, 2.091240406036377, 2.0986690521240234, 2.14974045753479, 2.151315450668335, 2.1338798999786377, 2.0940539836883545, 2.1665823459625244, 2.1187102794647217, 2.1475470066070557, 2.196540117263794, 2.2407734394073486, 2.1313416957855225, 2.2424237728118896, 2.2473251819610596, 2.3971614837646484, 2.143927574157715, 2.2534475326538086, 2.168574810028076, 2.324575662612915, 2.3642072677612305, 2.4600167274475098, 2.411309242248535, 2.362086772918701, 2.599332809448242, 2.2854645252227783, 2.562892436981201, 2.437718391418457, 2.202019214630127, 2.439473867416382, 2.180076837539673, 2]
datos_6_dispositivos = [3.70230481452942, 3.2563605308532715, 3.6716842651367188, 3.5940420627593994, 3.0133352279663086, 3.472463607788086, 3.328880548477173, 3.303987979888916, 3.391406774520874, 3.011789321899414, 3.097768783569336, 3.231452226638794, 3.509896993637085, 3.3937060832977295, 3.1686513423919678, 3.1042957305908203, 3.2022550106048584, 3.2707626819610596, 3.0921688079833984, 3.3091416358947754, 3.071373224258423, 3.399479627609253, 3.3478658199310303, 3.378417730331421, 3.0314695835113525, 3.21517276763916, 3.091134548187256, 3.20466947555542, 3.389899492263794, 3.327548027038574, 3.2891106605529785, 3.4447543621063232, 3.0211563110351562, 3.0528016090393066, 3.229602813720703, 3.101388692855835, 3.351973056793213, 3.147155523300171, 3.236713409423828, 3.004370927810669, 3.149956703186035, 3.157334089279175, 3.003218650817871, 3.16787052154541, 3.284611225128174, 3.293024778366089, 3.0899498462677, 3.183314800262451, 3.062220811843872, 3.149702548980713]

# Calcular estadísticas
medias = [np.mean(datos) for datos in [datos_2_dispositivos, datos_3_dispositivos, datos_4_dispositivos, datos_5_dispositivos, datos_6_dispositivos]]
std_devs = [np.std(datos) for datos in [datos_2_dispositivos, datos_3_dispositivos, datos_4_dispositivos, datos_5_dispositivos, datos_6_dispositivos]]
cis = [1.96 * std / np.sqrt(len(datos_2_dispositivos)) for std in std_devs]

# Crear gráfica
sns.set(style="whitegrid")
plt.figure(figsize=(10, 6))

# Dibujar línea con intervalos de confianza
x = [2, 3, 4, 5, 6]
plt.plot(x, medias, marker='o', color='navy', label='Media')
plt.fill_between(x, np.array(medias) - np.array(cis), np.array(medias) + np.array(cis), color='brown', alpha=0.2, label='Intervalo de confianza (95%)')

# Personalizar etiquetas y título
plt.xlabel('Número de dispositivos', fontsize=14)
plt.ylabel('Tiempo (segundos)', fontsize=14)
plt.title('Tiempo medio por número de dispositivos con intervalos de confianza', fontsize=16)
plt.xticks(ticks=x, labels=[str(i) for i in x], fontsize=12)
plt.yticks(fontsize=12)

# Añadir leyenda
plt.legend(fontsize=12)

# Mostrar gráfica
plt.tight_layout()
plt.show()
