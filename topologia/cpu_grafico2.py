import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import norm

# Datos proporcionados
# Datos proporcionados
datos_2_tiempo = [1.3409056663513184, 0.8549954891204834, 1.0829811096191406, 0.784813642501831, 0.7919392585754395, 0.7890441417694092, 0.7307918071746826, 0.8153619766235352, 0.8361716270446777, 0.8346271514892578, 0.7644948959350586, 0.854600191116333, 0.8646435737609863, 0.8284637928009033, 0.772169828414917, 0.8015470504760742, 0.7851555347442627, 0.8314487934112549, 0.7758364677429199, 0.9723305702209473, 0.9294345378875732, 0.9881954193115234, 0.8217177391052246, 0.9103326797485352, 0.9575872421264648]
datos_3_tiempo = [1.8914482593536377, 1.2485389709472656, 1.2919566631317139, 1.3488707542419434, 1.18204927444458, 1.2830405235290527, 1.318225622177124, 1.2081665992736816, 1.2462611198425293, 1.3143835067749023, 1.257127046585083, 1.3908312320709229, 1.2457668781280518, 1.267317295074463, 1.2991492748260498, 1.4113082885742188, 1.2975680828094482, 1.328934907913208, 1.2967665195465088, 1.2325184345245361, 1.1192388534545898, 1.3557758331298828, 1.1748435497283936, 1.2745938301086426, 1.3099281787872314]
datos_4_tiempo = [2.549193859100342, 1.826998233795166, 1.8949518203735352, 1.7957556247711182, 1.9516401290893555, 1.8043732643127441, 1.9340002536773682, 1.894158124923706, 1.7436909675598145, 1.6663517951965332, 1.7978520393371582, 1.7540438175201416, 2.070528030395508, 1.7613790035247803, 1.9323761463165283, 1.7639756202697754, 1.8482542037963867, 1.742187261581421, 1.7337069511413574, 1.7901647090911865, 1.840888500213623, 1.8008646965026855, 1.6369433403015137, 1.7751433849334717, 1.7080934047698975]
datos_5_tiempo = [2.8561384677886963, 2.28702712059021, 2.3880503177642822, 2.3593673706054688, 2.205317735671997, 2.2805304527282715, 2.297384738922119, 2.327113628387451, 2.241032123565674, 2.1735525131225586, 2.0593764781951904, 2.2554075717926025, 2.2229976654052734, 2.3821799755096436, 2.2219600677490234, 2.0434300899505615, 2.1033477783203125, 2.2706189155578613, 2.112591028213501, 2.267037868499756, 2.0603084564208984, 2.5015652179718018, 2.1935548782348633, 2.2132368087768555, 2.2772982120513916]
datos_6_tiempo = [4.172675371170044, 3.3464736938476562, 3.168314218521118, 3.2319650650024414, 3.0401158332824707, 3.0282068252563477, 3.4111106395721436, 3.2179114818573, 3.2158827781677246, 2.9149813652038574, 3.065746545791626, 3.0171902179718018, 3.2377684116363525, 3.2691524028778076, 3.160964250564575, 3.396315813064575, 3.213334798812866, 3.2828946113586426, 3.350318193435669, 3.109945774078369, 2.964930534362793, 3.0723650455474854, 3.2266271114349365, 2.951390504837036, 3.2914414405822754]

datos_2_cpu= [19.7, 10.3, 14.7, 9.3, 10, 7.7, 6.3, 11, 12.3, 10.3, 10.7, 11, 9.7, 10.3, 9.7, 10.3, 10.6, 10, 11.3, 12.6, 12, 9.7, 10.3, 9.7, 9.3]
datos_3_cpu = [27.7, 18, 19, 18, 15.7, 15, 13, 9, 13.3, 13, 16.3, 17.3, 16.3, 17, 16, 21, 14, 11, 14.7, 13.7, 14.7, 15, 15.7, 16, 15.6]
datos_4_cpu = [26.7, 20.7, 17.7, 21, 28.6, 19.6, 18.7, 24.6, 21, 12.3, 20, 23.3, 26.3, 16.3, 25.3, 21, 11.3, 18.9, 25.3, 21.3, 12, 18.3, 21.3, 25, 12]
datos_5_cpu = [31.7, 23.3, 26.3, 25.3, 20, 26.7, 17.3, 33, 21.3, 22.6, 26.6, 17.3, 27.2, 17.3, 22, 25.9, 18, 25.9, 23.7, 21.3, 25.7, 20.9, 25.7, 16.3, 20]
datos_6_cpu = [28.2, 32, 25.3, 23.6, 17.7, 30.3, 26, 20.6, 22.3, 28, 22, 23.9, 28, 22.7, 20.7, 25.9, 32, 25.7, 22.3, 22.7, 27, 22.3, 20, 28.3, 25]

# Función para calcular el intervalo de confianza
def intervalo_confianza(data, confianza=0.95):
    n = len(data)
    media = np.mean(data)
    stderr = np.std(data, ddof=1) / np.sqrt(n)
    h = stderr * norm.ppf((1 + confianza) / 2)
    return media, media - h, media + h

# Crear las gráficas
dispositivos = ['2', '3', '4', '5', '6']
datos = [datos_2_cpu, datos_3_cpu, datos_4_cpu, datos_5_cpu, datos_6_cpu]

medias = []
conf_intervals = []

for data in datos:
    media, lower, upper = intervalo_confianza(data)
    medias.append(media)
    conf_intervals.append((lower, upper))

# Crear la gráfica con intervalos de confianza
x = np.arange(len(dispositivos))

plt.figure(figsize=(10, 6))

# Color de la línea azul marino y color de los intervalos de confianza lacre
plt.errorbar(x, medias, yerr=[(top - bot) / 2 for bot, top in conf_intervals],
             fmt='o-', color='navy',  # Azul marino para la línea
             ecolor='brown',  # Lacre para los intervalos de confianza
             capsize=5, capthick=2, elinewidth=2, markersize=8)

plt.xticks(x, dispositivos)
plt.xlabel('Número de Dispositivos')
plt.ylabel('Tiempo (s)')
plt.title('Intervalos de Confianza del 95% para Tiempos por Número de Dispositivos')
plt.grid(True)
plt.show()